


1、多线程调试基本上没有问题，现在还有问题是短时间是同时输出的，这个还需要待定。。

三态状态的等待复位OK了

控制方式的选择 调试通过，具体方法还有待确定。

还剩下串口调试部分，光照部分还需要进一步确认。。修改。。算法基本上是可以了，还有就是三
态继电器控制和算法部分已经分离。

0705  控制方式ok，想的时候临时感觉还缺少的内容：
	应该只剩下串口部分，除了串口部分，串口部分包括输出控制和读取当前状态两个状态部分。
	还有就是从节点或者是网关获取的室内数据
	
0706  思考问题分析：
当程序开启的时候，如何获得当前温室各个执行机构的状态，或者是利用全局变量直接全部保存在内存中，从内存中获取。
但是这样的话，手动控制改变的状态是不是也需要保存？还是利用这个变量来保存更改，需要测试。
autorun 代码有问题，主要在于全局变量并不能够将数据保存并且记录下来，只能是当前运行的时候使用，下次一调用函数的时候，还是会出问题。这个还需要测试
可能需要用return 和传递参数来实现或者改变。好像也不会，因为是每一次都是通过获取当前状态来判断的。

起始就相当于回到了一个问题：当前执行机构的状态怎么获取：是通过发送控制信号的同时来set状态还是说通过继电器的读取

0707 CRC校验的内容，还有就是串口部分；还有怎么验证算法运行。

0710 串口部分调试好了，现在的问题是：1、指令部分需要作为持久化层次保存本地文件。2、树莓派的串口部分调试.
1、本地文件存储起始就不需要了，只需要在control里面发送一次就好。2、树莓派ok
Question：1。初始状态的读取。即断电重启

0711 1、断电重启   2、算法调整更新  (ok) 
0712 1、autorun的状态保存OK   2、算法OK   
	待解决：断电重启的状态以及手动获取的状态。暂时想法：断电重启后从数据库读取上一次的状态，自动运行一次结束应该执行的状态保存到数据库。
	对于手动控制的算法是否需要保存到数据库。
	或者是重启之后，需不需要查询所继电器当前的状态？
	
0719 串口继电器输出占用的时间太久，想办法用单独线程运行，及时return，return之后在输出继电器
	 control和serial_output输出部分线程分开

0914 需要把这个功能继续细化，或者是需要完善。   尽量做到完善，产品化。
    先完成arm_project
    后完善server_project
    1、整理output文件，将多个输出尽量合并为一个文件
    2、本地保存10天的数据，主要是针对室内和室外的数据。由于是5分钟保存一次，所以数据库的要保存的数据适量为12*24*10=2880，最大数量为这么多
    3、添加对应的post请求，将本地的数据post到服务器，保存到服务器的数据库。需要定义对应的数据格式，对应的json格式。
    4、当服务器连接失败的时候，记录时间，当连接成功之后，自动将本地的数据（服务器未连接的时候保存到本地的数据）发送到服务器。但是本地不删除，
    5、通过定时请求的方式来获取web的最新控制内容，可以通过添加标志位的方式来标记该指令是否已经执行


arm的sqlite轻量数据库内容：
    1、有关arm数据库数据内容大小的问题，当保存10天的数据，即2880个数据的时候，室内节点所占的资源大小为450k，若有八个节点，则为450*8=3.6M
    2、室外数据比室内略多，2880个数据的时候为1.52M
    3、对于参数设置的保存，默认保存最近30次的设置，
    4、arm数据库只有indoor一张数据表，不分节点保存。服务器中需要分节点保存
    5、在arm数据库的indoor表，添加node_count字段，用于统计不同节点的数量，主要用于精确查找，以及进行对应的删除操作


先完成部分：
    1、测试try exception在多线程下面使用。   可以，之后不会跳出异常报错，之后可以继续运行。 检查server的outdoor来源 ok
    2、arm的indoor数据post请求部分，数据库做对应的筛选，并且构造json数据。bbb_server的post请求处理，并且分别保存到数据库。
    server的post处理 ok  定义的数据格式 ok 从数据库中读出并且构造json数据 ok   这三样只是针对indoor的。
    接下去需要进行测试内容。。。。整体运行测试 ok
    3、outdoor的功能和indoor ok
    4、数据缓存发送 ok
    定时向服务器发送get请求,获取对应的控制指令 ok

    需要安装requests包 用pip 安装
    5、还剩下对保存操作的处理，保存的时候先校验数据库的数量，如果超出范围，则删除id最小的数据，稍微复杂一点的是indoor的内容
    控制界面需要修改的地方:1添加一个tab显示8个节点的节点显示  2完善现场控制和远程控制的切换功能,主要是能够网页控制继电器的
    开关.

    1、控制方式切换。
    2、保存数据库校验  保存之前需要校验数量，并删除之前的操作数据。
    3、提供arm前端显示的所有节点的json数据 ok 现在数据来源是服务器，已有的那一套数据上传的服务器，之后从服务器读取出来

    本地缓存的方式;  目前采用的是方式 1
        1、每一次数据都放入数据库缓存，post的时候直接从缓存中读取最新数据。当连接失败的时候，读取连接失败开始的缓存数据
        2、正常连接的时候，不放入缓存，只有当连接失败的时候才加入缓存。post的时候：从缓存中读取所有数据，删除缓存数据，加上现在最新的数据，发送post请求。

    最好缓存数据不要卸载数据库里面，直接在运行内存中。这样可以减少不必要的维护操作
    0923操作：发送数据库里面的缓存数据之后，就清空数据库